class Solution {
public:
    int height(TreeNode* root)
    {
        if(root==NULL)
            return 0;
        return 1+max(height(root->left),height(root->right));
    }
    bool isBalanced(TreeNode* root) {
        if(root==NULL)
            return 1;
        queue<TreeNode*> q;
        q.push(root);
        TreeNode* ptr;
        int maxi=0,l,h;
        while(!q.empty())
        {
            int len=q.size();
            for(int i=0;i<len;i++)
            {
                ptr=q.front();
                q.pop();l=0;h=0;
                if(ptr->left!=NULL)
                l=height(ptr->left);
                if(ptr->right!=NULL)
                h=height(ptr->right);
                if(abs(l-h)>1)
                    return 0;
                if(ptr->left!=NULL)
                    q.push(ptr->left);
                if(ptr->right!=NULL)
                    q.push(ptr->right);
            }
        }
        return 1;
    }
};
