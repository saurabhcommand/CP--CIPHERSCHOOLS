class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root)
            return ans;
        queue<TreeNode*>q;
        q.push(root);
        vector<int > inter;
        inter.push_back(root->val);
        ans.push_back(inter);
        while(!q.empty()){
            inter.clear();
            int len=q.size();
            TreeNode* ptr;
            for(int i=0;i<len;i++){
                ptr=q.front();
                q.pop();
                if(ptr->left!=NULL){
                    inter.push_back(ptr->left->val);
                    //cout<<ptr->left->val<<" ";
                    q.push(ptr->left);
                }
                if(ptr->right!=NULL){
                    inter.push_back(ptr->right->val);
                    //cout<<ptr->right->val<<" ";
                    q.push(ptr->right);
                }
            }
            // for(int i=0;i<inter.size();i++)
            //     cout<<inter[i]<<" ";
            // cout<<"\n";
            if(inter.size()!=0)
            ans.push_back(inter);
        }
        return ans;
    }
};
