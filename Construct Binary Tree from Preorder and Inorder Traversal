class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        if(preorder.size()==0)
            return NULL;        
        TreeNode * head = new TreeNode(preorder[0]);
        stack<TreeNode*> s;
        s.push(head);
        int i=1;
        int j=0;
        while(i < preorder.size())
        {
            TreeNode * temp = NULL;
            TreeNode * t = new TreeNode(preorder[i]);
            while(!s.empty() && s.top()->val == inorder[j])
            {
                temp = s.top();
                s.pop();
                j++;
            }
            if(temp)
            {
                temp->right=t;
            }
            else
            {
                s.top()->left=t;
            }
            s.push(t);
            i++;
        }
        return head;
    }
};
